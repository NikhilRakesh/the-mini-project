<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <style>
        .loading-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(255, 255, 255, 0.7);
            display: none;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .loading-spinner {
            border: 4px solid rgba(255, 255, 255, 0.3);
            border-top: 4px solid #3498db;
            border-radius: 50%;
            width: 50px;
            height: 50px;
            animation: spin 2s linear infinite;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .loading-text {
            font-size: 18px;
            color: #3498db;
        }


        .green-title {
            color: green;
        }
    </style>
</head>

<header>
    <%- include('../partial/userheader.ejs') %>
</header>

<body class="bg-white text-gray-900">
    <!-- Header -->
    <header class="bg-blue-500 text-white py-4">
        <div class="container mx-auto text-center">
            <h1 class="text-2xl font-semibold">Checkout</h1>
        </div>
    </header>

    <section>
        <div class="relative overflow-x-auto shadow-md sm:rounded-lg">
            <table class="w-full text-sm text-left text-gray-500 bg-white">
                <thead class="text-xs text-gray-700 uppercase bg-gray-50">
                    <tr>
                        <th scope="col" class="px-6 py-3">
                            <span class="sr-only">Image</span>
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Product
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Qty
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Price
                        </th>
                        <th scope="col" class="px-6 py-3">
                            Action
                        </th>
                    </tr>
                </thead>
                <% user.shoppingCart.items.forEach(function(cartItem) { %>
                    <tbody>
                        <tr class="bg-white border-b hover:bg-gray-50">
                            <td class="w-32 p-4">
                                <img src="<%= cartItem.productId.imageUrl[3] %>" alt="Apple Watch">
                            </td>
                            <td class="px-6 py-4 font-semibold text-gray-900">
                                <%= cartItem.productId.name %>
                            </td>
                            <td class="px-6 py-4">
                                <div class="flex items-center space-x-3">

                                    <div>
                                        <input type="number" id="first_product"
                                            class="bg-gray-50 w-14 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block px-2.5 py-1"
                                            placeholder="<%= cartItem.quantity %>" required>
                                    </div>
                                </div>

                            </td>
                            <td class="px-6 py-4 font-semibold text-gray-900">
                                <%= new Intl.NumberFormat('en-IN', { style: 'currency' , currency: 'INR' ,
                                    }).format(cartItem.productId.price) %>
                            </td>
                            <td class="px-6 py-4">
                                <a href="#" class="font-medium text-red-600 hover:underline">Remove</a>
                            </td>
                        </tr>
                    </tbody>
                    <% }); %>
            </table>
        </div>
    </section>


    <section class="container mx-auto my-8 flex flex-wrap">
        <!-- Address -->
        <div class="w-full md:w-1/2 mb-4 md:pr-4">
            <div class="border rounded-lg p-4 bg-white shadow-md mt-4">
                <div class="flex justify-between mb-2">
                    <h2 class="text-xl  font-semibold">Delevery Address</h2>
                    <button type="button" data-modal-target="staticModal" data-modal-toggle="staticModal"
                        class="text-white bg-[#FF9119] hover:bg-[#FF9119]/80 focus:ring-4 focus:outline-none focus:ring-[#FF9119]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:hover:bg-[#FF9119]/80 dark:focus:ring-[#FF9119]/40 mr-2 mb-2">
                        change Adress
                    </button>
                </div>
                <hr>
                <% user.address.forEach((address, index)=> { %>
                    <% if (address.primary) { %>
                        <div class="bg-white p-4 rounded-lg      mb-4">

                            <h3 class="text-lg font-semibold mb-2">Address <%= index + 1 %>:</h3>
                            <p><strong>Street:</strong>
                                <span id="street_<%= index %>">
                                    <%= address.street %>
                                </span>
                                <input type="text" id="streetInput_<%= index %>" name="street" class="hidden"
                                    value="<%= address.street %>" />
                            </p>

                            <input type="hidden" id="objectId_<%= index %>" value="<%= address._id %>">
                            <input type="hidden" id="objectindex" value="<%= index %>">


                            <p><strong>City:</strong>
                                <span id="city_<%= index %>">
                                    <%= address.city %>
                                </span>
                                <input type="text" id="cityInput_<%= index %>" name="city" class="hidden"
                                    value="<%= address.city %>" />
                            </p>
                            <p><strong>State:</strong>
                                <span id="state_<%= index %>">
                                    <%= address.state %>
                                </span>
                                <input type="text" id="stateInput_<%= index %>" name="state" class="hidden"
                                    value="<%= address.state %>" />
                            </p>
                            <p><strong>Postal Code:</strong>
                                <span id="postalCode_<%= index %>">
                                    <%= address.postalCode %>
                                </span>
                                <input type="text" id="postalCodeInput_<%= index %>" name="postalCode" class="hidden"
                                    value="<%= address.postalCode %>" />
                            </p>
                            <p><strong>Country:</strong>
                                <span id="country_<%= index %>">
                                    <%= address.country %>
                                </span>
                                <input type="text" id="countryInput_<%= index %>" name="country" class="hidden"
                                    value="<%= address.country %>" />
                            </p>

                        </div>
                        <hr>
                        <% } %>
                            <% }); %>
            </div>
        </div>


        <div class="w-full md:w-1/2 mb-4 md:pl-4">
            <div class="border rounded-lg p-4 shadow-md bg-white mt-4">
                <h2 class="text-xl font-semibold">Order Summary</h2>
                <table class="min-w-full">
                    <thead>
                        <tr>
                            <th
                                class="px-6 py-3 bg-gray-200 text-left text-xs font-semibold text-gray-600 uppercase border-b border-gray-300">
                                Description</th>
                            <th
                                class="px-6 py-3 bg-gray-200 text-left text-xs font-semibold text-gray-600 uppercase border-b border-gray-300">
                                Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap">Total Amount</td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <%= FormatedtotalPrice %>
                            </td>
                        </tr>
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap">Discount</td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <%= formattedDiscount %>
                            </td>
                        </tr>
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap">Delivery Charge</td>
                            <td class="px-6 py-4 whitespace-nowrap"><del class="text-gray-500 ml-2">â‚¹40</del> <span
                                    class="text-green-600">Free</span></td>
                        </tr>
                    </tbody>
                    <tfoot>
                        <tr>
                            <td
                                class="px-6 py-3 bg-gray-200 text-left text-xs font-semibold text-gray-600 uppercase border-t border-gray-300">
                                Total</td>
                            <td id="formattedFinalTotal" data-formattedFinalTotal=" <%= formattedFinalTotal %>"
                                class="px-6 py-3 bg-gray-200 text-left text-xs font-semibold text-gray-600 uppercase border-t border-gray-300">
                                <%= formattedFinalTotal %>
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>

        </div>


    </section>
    <div class="flex justify-center ">
        <a href="#">
            <button type="button" data-modal-target="small-modal" data-modal-toggle="small-modal"
                class="px-3 py-2 mb-2 text-xs font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
                Continue</button>
        </a>
    </div>





    <!-- Main modal -->
    <div id="staticModal" data-modal-backdrop="static" tabindex="-1" aria-hidden="true"
        class="fixed top-0 left-0 right-0 bottom-0 z-50 flex overflow-y-auto justify-center items-center hidden">
        <div class="relative w-full max-w-2xl max-h-full">
            <!-- Modal content -->
            <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                <!-- Modal header -->
                <div class="flex items-start justify-between p-4 border-b rounded-t dark:border-gray-600">
                    <h3 class="text-xl font-semibold text-gray-900 dark:text-white">
                        Static modal
                    </h3>
                    <button type="button"
                        class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
                        data-modal-hide="staticModal">
                        <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                            viewBox="0 0 14 14">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                        </svg>
                        <span class="sr-only">Close modal</span>
                    </button>
                </div>
                <!-- Modal body -->
                <div class="p-6 space-y-6">
                    <% user.address.forEach((address, index)=> { %>
                        <div class="bg-white dark:bg-gray-800 p-4 rounded-lg shadow-md mb-4">
                            <div class="flex items-center mr-4">
                                <button type="button" class="address-button" data-address-id="<%= address._id %>">
                                    <input id="inline-radio" type="radio" value="" name="inline-radio-group"
                                        class="w-4 h-4 text-blue-600 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 border-gray-300 dark:border-gray-600 focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2">
                                    <label for="inline-radio"
                                        class="ml-2 text-sm font-medium text-gray-900 dark:text-gray-300">
                                    </label>
                                </button>
                            </div>

                            <h3 class="text-lg font-semibold mb-2 text-gray-900 dark:text-white">Address <%= index + 1
                                    %>:</h3>
                            <p><strong class="text-gray-700 dark:text-gray-300">Street:</strong>
                                <span id="street_<%= index %>" class="text-gray-900 dark:text-white">
                                    <%= address.street %>
                                </span>
                                <input type="text" id="streetInput_<%= index %>" name="street" class="hidden"
                                    value="<%= address.street %>" />
                            </p>

                            <input type="hidden" id="objectId_<%= index %>" value="<%= address._id %>">
                            <input type="hidden" id="objectindex" value="<%= index %>">

                            <p><strong class="text-gray-700 dark:text-gray-300">City:</strong>
                                <span id="city_<%= index %>" class="text-gray-900 dark:text-white">
                                    <%= address.city %>
                                </span>
                                <input type="text" id="cityInput_<%= index %>" name="city" class="hidden"
                                    value="<%= address.city %>" />
                            </p>
                            <p><strong class="text-gray-700 dark:text-gray-300">State:</strong>
                                <span id="state_<%= index %>" class="text-gray-900 dark:text-white">
                                    <%= address.state %>
                                </span>
                                <input type="text" id="stateInput_<%= index %>" name="state" class="hidden"
                                    value="<%= address.state %>" />
                            </p>
                            <p><strong class="text-gray-700 dark:text-gray-300">Postal Code:</strong>
                                <span id="postalCode_<%= index %>" class="text-gray-900 dark:text-white">
                                    <%= address.postalCode %>
                                </span>
                                <input type="text" id="postalCodeInput_<%= index %>" name="postalCode" class="hidden"
                                    value="<%= address.postalCode %>" />
                            </p>
                            <p><strong class="text-gray-700 dark:text-gray-300">Country:</strong>
                                <span id="country_<%= index %>" class="text-gray-900 dark:text-white">
                                    <%= address.country %>
                                </span>
                                <input type="text" id="countryInput_<%= index %>" name="country" class="hidden"
                                    value="<%= address.country %>" />
                            </p>

                        </div>
                        <% }); %>


                </div>
                <!-- Modal footer -->
                <div class="flex items-center p-6 space-x-2 border-t border-gray-200 rounded-b dark:border-gray-600">
                    <button data-modal-hide="staticModal" onclick="acceptAndReloadPage()" type="button"
                        class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">I
                        accept</button>
                    <button data-modal-hide="staticModal" type="button"
                        class="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-blue-300 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600">Decline</button>
                </div>
            </div>
        </div>
    </div>





    <div id="small-modal" tabindex="-1"
        class="fixed top-0 left-0 right-0 bottom-0 z-50 flex overflow-y-auto justify-center items-center hidden">
        <div class="relative w-full max-w-2xl max-h-full">
            <!-- Modal content -->
            <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
                <!-- Modal header -->
                <div class="flex items-center justify-between p-5 border-b rounded-t dark:border-gray-600">
                    <h3 class="text-xl font-medium text-gray-900 dark:text-white">
                        Small modal
                    </h3>
                    <button type="button"
                        class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
                        data-modal-hide="small-modal">
                        <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                            viewBox="0 0 14 14">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                        </svg>
                        <span class="sr-only">Close modal</span>
                    </button>
                </div>
                <!-- Modal body -->
                <div class="p-6 space-y-6">
                    <div class="dark:bg-gray-800 p-4 rounded-lg shadow-md mb-4">

                        <div class="flex items-center mb-2">
                            <input type="radio" id="upiRadio" data-modal-hide="small-modal" name="paymentOption"
                                value="upi">
                            <label for="upiRadio" class="ml-2 text-gray-900 dark:text-gray-300">UPI</label>
                        </div>

                        <div class="flex items-center mb-2">
                            <input type="radio" id="codRadio" data-modal-hide="small-modal" name="paymentOption"
                                value="cash_on_delivery">
                            <label for="codRadio" class="ml-2 text-gray-900 dark:text-gray-300">Cash on Delivery</label>
                        </div>

                        <div class="flex items-center">
                            <input type="radio" id="cardsRadio" name="paymentOption" value="cards">
                            <label for="cardsRadio" class="ml-2 text-gray-900 dark:text-gray-300">Credit/Debit
                                Cards</label>
                        </div>
                    </div>
                </div>
                <!-- Modal footer -->
                <div class="flex items-center p-6 space-x-2 border-t border-gray-200 rounded-b dark:border-gray-600">
                    <!-- <a href="/confirmOrder"> -->
                    <button id="confirmOrderButton" data-modal-target="popup-modal" data-modal-toggle="popup-modal"
                        data-modal-hide="small-modal"
                        class="block text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                        type="button">
                        Confirm Order
                    </button>
                    </a>
                    <button data-modal-hide="small-modal" type="button"
                        class="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-200 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600">
                        Decline</button>
                </div>
            </div>
        </div>
    </div>





    <main class="flex justify-center">
        <div id="popup-modal" tabindex="-1"
            class="fixed top-0 left-0 right-0 bottom-0 z-50 flex overflow-y-auto justify-center items-center hidden">
            <div class="relative w-full max-w-md max-h-full">
                <div class="relative bg-white rounded-lg shadow">
                    <button type="button"
                        class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center hover:bg-gray-200">
                        <svg class="w-3 h-3" aria-hidden="true" xmlns="https://www.flaticon.com/free-icon/check_5709755"
                            fill="none" viewBox="0 0 14 14">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
                        </svg>
                        <span class="sr-only">Close modal</span>
                    </button>
                    <div class="p-6 text-center">
                        <svg class="mx-auto mb-4 text-green-400 w-12 h-12" xmlns="http://www.w3.org/2000/svg"
                            fill="none" viewBox="0 0 24 24">
                            <path fill="none" stroke="currentColor" stroke-width="2"
                                d="M22 11.08V12a10 10 0 1 1-10-10" />
                            <path fill="none" stroke="currentColor" stroke-width="2" d="M22 4L12 14.01l-3-3" />
                        </svg>

                        <h3 class="mb-5 text-lg font-normal text-gray-950">Your order has been successful.</h3>
                        <p class="mb-5 text-gray-500">Thank you for your order. Your items will be delivered shortly.
                        </p>
                        <a href="/home">
                            <button data-modal-hide="popup-modal" type="button"
                                class="text-white bg-blue-600 hover-bg-blue-800 focus-ring-4 focus-outline-none focus-ring-blue-300 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2">
                                Continue Shopping
                            </button>
                        </a>

                    </div>
                </div>
            </div>
        </div>
    </main>


    <div id="loading-container" class="loading-container">
        <div class="loading-spinner"></div>
        <p class="loading-text">Processing payment...</p>
    </div>






</body>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    // Replace with your actual Razorpay key_id
    const razorpayKey = 'rzp_test_eKsmdHCxXqAJL5';
    const tdElement = document.getElementById('formattedFinalTotal');
    const formattedFinalTotal = tdElement.getAttribute('data-formattedFinalTotal');

    const requestData = {
        amount: formattedFinalTotal,
        productid: null,
    };

    const loadingContainer = document.getElementById('loading-container');
    const loadingSpinner = document.querySelector('.loading-spinner');

    function showLoadingSpinner() {
        console.log('hideLoadingSpinner');

        loadingContainer.style.display = 'flex';
    }

    function hideLoadingSpinner() {
        loadingContainer.style.display = 'none';
    }

    // Event listener for the payment button
    document.getElementById('upiRadio').addEventListener('change', () => {
        showLoadingSpinner()
        fetch('/createOrder', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(requestData),

        })
            .then(response => response.json())
            .then(({ order, pdfLink }) => {
                hideLoadingSpinner()
                const options = {
                    key: razorpayKey,
                    amount: order.amount,
                    currency: "INR",
                    name: 'LuxeLifeHub',
                    description: 'Payment for your product/service',
                    order_id: order.id,
                    handler: function (response) {

                        Swal.fire({
                            position: 'center', // Center the modal
                            icon: 'success',
                            title: 'Payment successful! Payment ID: ' + response.razorpay_payment_id,
                            showConfirmButton: false,
                            timer: 1500
                        })
                            .then((result) => {
                                window.location.href = '/confirmorder';
                            })

                    },
                    prefill: {
                        name: 'Customer Name',
                        email: 'customer@example.com',
                        contact: 'customer_contact_number'
                    },
                    theme: {
                        color: '#3399cc'
                    }

                };



                const rzp = new Razorpay(options);
                rzp.on('payment.failed', function (response) {
                    hideLoadingSpinner();
                });
                rzp.open({});

            });
    });
</script>


<script>
    const codRadio = document.getElementById("codRadio");

    codRadio.addEventListener("change", () => {
        showLoadingSpinner()
        fetch("/cashondelivery", {
            method: "post",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(requestData)
        })
            .then(response => {
                hideLoadingSpinner();
                if (response.ok) {
                    Swal.fire({
                        title: 'Do you want to place the order',
                        showClass: {
                            popup: 'animate__animated animate__fadeInDown'
                        },
                        hideClass: {
                            popup: 'animate__animated animate__fadeOutUp'
                        },
                        customClass: {
                            title: 'green-title' // Add a custom CSS class to the title
                        }
                    })
                        .then((result) => {
                            window.location.href = '/confirmorder';
                        })
                } else {
                    throw new Error("Network response was not ok");
                }
            })
            .then(data => {
                console.log(data);
            })
            .catch(error => {
                console.error("Fetch error:", error);
            });
    });
</script>



<script>
    function openModal() {
        const modal = document.getElementById('popup-modal');
        modal.style.display = 'block';
    }

    function closeModal() {
        const modal = document.getElementById('popup-modal');
        modal.style.display = 'none';
    }

    document.addEventListener('DOMContentLoaded', function () {
        const openButton = document.getElementById('open-modal-button');
        const closeButton = document.querySelector('#popup-modal button');

        openButton.addEventListener('click', openModal);

        closeButton.addEventListener('click', closeModal);

        const modal = document.getElementById('popup-modal');
        modal.addEventListener('click', function (event) {
            if (event.target === modal) {
                closeModal();
            }
        });

        const modalContent = document.querySelector('#popup-modal .relative');
        modalContent.addEventListener('click', function (event) {
            event.stopPropagation();
        });
    });

</script>




<script>
    document.getElementById('confirmOrderButton').addEventListener('click', function () {
        fetch('/confirmorder', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => {
                if (response.ok) {
                    console.log('Order confirmed successfully.');
                } else {
                    console.error('Order confirmation failed.');
                }
            })
            .catch(error => {
                console.error('Request failed:', error);
            });
    });

</script>



<script>
    const addressButtons = document.querySelectorAll(".address-button");
    addressButtons.forEach((button) => {
        button.addEventListener("click", function () {
            const addressId = button.getAttribute("data-address-id");

            const data = { addressId };

            fetch('/primary', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            })
                .then((response) => {
                    if (response.ok) {
                    } else {
                        // Handle errors here
                    }
                })
                .catch((error) => {
                    // Handle network errors here
                });
        });
    });


</script>

<script>
    function acceptAndReloadPage() {

        location.reload();
    }
</script>



</html>